# Generated by Django 4.1 on 2022-09-29 22:50

import accounts.models
from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='email')),
                ('first_name', models.CharField(max_length=150, verbose_name='First name')),
                ('last_name', models.CharField(max_length=150, verbose_name='Last name')),
                ('profile_pic', models.ImageField(blank=True, null=True, upload_to=accounts.models.upload_location, verbose_name='profile picture')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            managers=[
                ('active', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='LabMember',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
            ],
            options={
                'verbose_name': 'Laboratory Member',
                'verbose_name_plural': 'Laboratory Members',
            },
        ),
        migrations.CreateModel(
            name='Laboratory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='name')),
                ('address', models.CharField(max_length=100, verbose_name='address')),
                ('email', models.EmailField(max_length=100, verbose_name='email')),
                ('phone', models.CharField(max_length=30, verbose_name='phone number')),
                ('url', models.URLField(max_length=100, verbose_name='URL')),
                ('profile_pic', models.ImageField(blank=True, null=True, upload_to=accounts.models.upload_location, verbose_name='profile picture')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('user', models.ManyToManyField(related_name='user', through='accounts.LabMember', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'laboratory',
                'verbose_name_plural': 'laboratories',
            },
        ),
        migrations.CreateModel(
            name='LabUserType',
            fields=[
                ('group_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='auth.group')),
                ('type', models.CharField(max_length=20, verbose_name='user type')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('laboratory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.laboratory', verbose_name='laboratory')),
            ],
            options={
                'verbose_name': 'Lab User Type',
                'verbose_name_plural': 'Lab User Types',
                'unique_together': {('type', 'laboratory')},
            },
            bases=('auth.group',),
            managers=[
                ('objects', django.contrib.auth.models.GroupManager()),
            ],
        ),
        migrations.AddField(
            model_name='labmember',
            name='laboratory',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.laboratory', verbose_name='laboratory'),
        ),
        migrations.AddField(
            model_name='labmember',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='user'),
        ),
        migrations.AddField(
            model_name='labmember',
            name='user_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.labusertype', verbose_name='user type'),
        ),
        migrations.AlterUniqueTogether(
            name='labmember',
            unique_together={('user', 'laboratory')},
        ),
    ]
