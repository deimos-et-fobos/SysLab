# Generated by Django 4.1 on 2022-10-05 18:29

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Doctor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=120, verbose_name='first name')),
                ('last_name', models.CharField(max_length=120, verbose_name='last name')),
                ('medical_license', models.CharField(max_length=10, verbose_name='medical license')),
                ('specialty', models.CharField(blank=True, max_length=30, null=True, verbose_name='specialty')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
            ],
            options={
                'verbose_name': 'doctor',
                'verbose_name_plural': 'doctors',
            },
        ),
        migrations.CreateModel(
            name='HealthcareProvider',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120, verbose_name='name')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
            ],
            options={
                'verbose_name': 'healthcare provider',
                'verbose_name_plural': 'healthcare providers',
            },
        ),
        migrations.CreateModel(
            name='LabTest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=30, unique=True, verbose_name='code')),
                ('name', models.CharField(max_length=30, verbose_name='name')),
                ('ub', models.CharField(max_length=10, verbose_name='UB')),
                ('method', models.CharField(blank=True, max_length=30, verbose_name='method')),
                ('price', models.CharField(blank=True, max_length=30, verbose_name='price')),
                ('sample_type', models.CharField(blank=True, choices=[('0', 'Blood'), ('1', 'Urine'), ('2', 'Vaginal discharge'), ('3', 'Semen'), ('4', 'Saliva'), ('5', 'Stool'), ('6', 'Other')], max_length=1, verbose_name='sample type')),
                ('type', models.CharField(choices=[('0', 'Single'), ('1', 'Compound')], default='0', max_length=1, verbose_name='type')),
                ('is_culture', models.BooleanField(default=False, verbose_name='culture')),
                ('reference_value', models.CharField(blank=True, max_length=255, verbose_name='reference value')),
                ('unit', models.CharField(blank=True, max_length=30, verbose_name='unit')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('childs', models.ManyToManyField(blank=True, related_name='parents', to='lab.labtest', verbose_name='childs')),
            ],
            options={
                'verbose_name': 'lab test',
                'verbose_name_plural': 'lab tests',
            },
        ),
        migrations.CreateModel(
            name='LabTestGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True, verbose_name='name')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
            ],
            options={
                'verbose_name': 'lab test group',
                'verbose_name_plural': 'lab test groups',
            },
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=120, verbose_name='first name')),
                ('last_name', models.CharField(max_length=120, verbose_name='last name')),
                ('id_type', models.CharField(choices=[('0', 'DNI'), ('1', 'LE'), ('2', 'LC'), ('3', 'Passport'), ('4', 'Other')], max_length=1, verbose_name='ID type')),
                ('id_number', models.CharField(max_length=30, unique=True, verbose_name='ID number')),
                ('birthday', models.DateField(blank=True, verbose_name='date of birth')),
                ('age', models.PositiveIntegerField(blank=True, verbose_name='age')),
                ('gender', models.CharField(blank=True, choices=[('0', 'Male'), ('1', 'Female'), ('2', 'Non-Binary'), ('3', 'Other')], max_length=1, null=True, verbose_name='gender')),
                ('healthcare_provider', models.CharField(blank=True, max_length=100, verbose_name='healthcare provider')),
                ('phone', models.CharField(blank=True, max_length=20, verbose_name='phone')),
                ('address', models.CharField(blank=True, max_length=150, verbose_name='address')),
                ('email', models.EmailField(blank=True, max_length=150, verbose_name='email')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
            ],
            options={
                'verbose_name': 'patient',
                'verbose_name_plural': 'patients',
            },
        ),
        migrations.CreateModel(
            name='Protocol',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hc_provider', models.CharField(blank=True, max_length=100, verbose_name='healthcare provider')),
                ('hc_number', models.CharField(blank=True, max_length=100, verbose_name='healthcare provider number')),
                ('authorization_number', models.CharField(blank=True, max_length=100, verbose_name='authorization number')),
                ('has_cultures', models.BooleanField(default=False, verbose_name='cultures')),
                ('diagnosis', models.CharField(blank=True, max_length=255, null=True, verbose_name='diagnosis')),
                ('observations', models.CharField(blank=True, max_length=120, null=True, verbose_name='observations')),
                ('status', models.CharField(blank=True, choices=[('0', 'Pendent'), ('1', 'On process'), ('2', 'Finished'), ('3', 'Validated')], max_length=1, verbose_name='status')),
                ('checkin_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='check in time')),
                ('extraction_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='extraction time')),
                ('validation_time', models.DateTimeField(blank=True, verbose_name='validation time')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='timestamp')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('doctor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lab.doctor', verbose_name='doctor')),
                ('laboratory', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.laboratory', verbose_name='laboratory')),
                ('patient', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lab.patient', verbose_name='patient')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'verbose_name': 'protocol',
                'verbose_name_plural': 'protocols',
            },
        ),
        migrations.CreateModel(
            name='Sample',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('0', 'Blood'), ('1', 'Urine'), ('2', 'Vaginal discharge'), ('3', 'Semen'), ('4', 'Saliva'), ('5', 'Stool'), ('6', 'Other')], max_length=1, verbose_name='type')),
                ('received', models.BooleanField(default=True, verbose_name='received')),
                ('checkin_time', models.DateTimeField(blank=True, null=True, verbose_name='check in time')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('protocol', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lab.protocol', verbose_name='protocol')),
            ],
            options={
                'verbose_name': 'sample',
                'verbose_name_plural': 'samples',
            },
        ),
        migrations.CreateModel(
            name='LabTestResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(blank=True, max_length=30, verbose_name='value')),
                ('status', models.CharField(blank=True, choices=[('0', 'Pendent'), ('1', 'On process'), ('2', 'Finished'), ('3', 'Validated')], max_length=1, null=True, verbose_name='status')),
                ('observations', models.CharField(blank=True, max_length=120, null=True, verbose_name='observations')),
                ('test_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='test time')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='timestamp')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='labtest_parent_results', to='lab.labtest', verbose_name='parent test')),
                ('protocol', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lab.protocol', verbose_name='protocol')),
                ('test', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='labtest_results', to='lab.labtest', verbose_name='test')),
            ],
            options={
                'verbose_name': 'lab test result',
                'verbose_name_plural': 'lab test results',
            },
        ),
        migrations.AddField(
            model_name='labtest',
            name='group',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='lab.labtestgroup', verbose_name='group'),
        ),
        migrations.CreateModel(
            name='Culture',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('medicine', models.CharField(max_length=30, verbose_name='medicine')),
                ('resistance', models.CharField(choices=[('0', 'Low'), ('1', 'Medium'), ('2', 'High'), ('3', 'Unknown')], max_length=1, verbose_name='resistance')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('labtest_result', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lab.labtestresult', verbose_name='lab test result')),
                ('protocol', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lab.protocol', verbose_name='protocol')),
            ],
            options={
                'verbose_name': 'culture',
                'verbose_name_plural': 'cultures',
            },
        ),
    ]
